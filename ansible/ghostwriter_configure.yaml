---
- name: Configure Ghostwriter
  hosts: jab_contact
  become: true
  remote_user: yang
  vars_files:
    #Vault must contain the following variables: 
    #ansible_user: username
    #letsencrypt_hostname: example.com (nginx certname)
    #ghostwriter_url: ghostwriter.nginx.com
    #ghostwriter_user_ip: your.internet.ip.address
    - secrets.yml

  tasks:

    #This task assumes that you have an existing letsencrypt setup and that you use the "--cert-name" on renewal so that the parameter for the letsencrypt hostname does not change.
    #You may want to make a cronjob for this on the server. May update with this later. 
    - name: Create a copy of the host SSL locations (locations assume LetsEncrypt/Certbot Defaults)
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: yang
        group: yang
        remote_src: yes
      loop: 
        - { dest: '/home/{{ ansible_user }}/ghostwriter/ssl/ghostwriter.key', src: '/etc/letsencrypt/live/{{ letsencrypt_hostname }}/privkey.pem'}
        - { dest: '/home/{{ ansible_user }}/ghostwriter/ssl/ghostwriter.crt', src: '/etc/letsencrypt/live/{{ letsencrypt_hostname }}/cert.pem'}
        - { dest: '/home/{{ ansible_user }}/ghostwriter/ssl/dhparam.pem', src: '/etc/letsencrypt/ssl-dhparams.pem'}

    #This task assumes you do not have nginx or another webserver already up and running on this host. If you do, you will need to change production.yml and nginx.conf in the ghostwriter files before building the containers to the ports you would like instead of 80 and 443. A simple proxy pass will not be sufficient.
    - name: Run the install script.
      ansible.builtin.command: "/home/{{ ansible_user }}/ghostwriter/ghostwriter-cli-linux install"
      register: ghostwriter_install

    - name: Print any install script output. 
      ansible.builtin.debug:
        msg: "{{ ghostwriter_install.stdout }}" 

    - name: Retrieve administrator default credentials.
      ansible.builtin.command: "/home/{{ ansible_user }}/ghostwriter/ghostwriter-cli-linux config allowhost {{ghostwriter_user_ip}}"

    - name: Allow Nginx Redirect Host Headers for Same Domain
      ansible.builtin.command: "/home/{{ ansible_user }}/ghostwriter/ghostwriter-cli-linux config allowhost {{ghostwriter_url}}"
        
    - name: Set ghostwriter domain
      ansible.builtin.command: "/home/{{ ansible_user }}/ghostwriter/ghostwriter-cli-linux config set NGINX_HOST {{ ghostwriter_url }}"

    - name: Set ghostwriter down for new config.
      ansible.builtin.command: "/home/{{ ansible_user }}/ghostwriter/ghostwriter-cli-linux containers down"

    - name: Set ghostwriter up.
      ansible.builtin.command: "/home/{{ ansible_user }}/ghostwriter/ghostwriter-cli-linux containers up"

    - name: Retrieve administrator default credentials.
      ansible.builtin.command: "/home/{{ ansible_user }}/ghostwriter/ghostwriter-cli-linux config get admin_password"
      register: ghostwriter_admin

    - name: Print default credentials.
      ansible.builtin.debug: 
        msg: "Ghostwriter installation successful! Your default admin login password is: {{ ghostwriter_admin.stdout }} \n Your default login is: admin \n Your default URL to login is: {{ ghostwriter_url }} and you can access it from: {{ ghostwriter_user_ip }}. Be sure to immediately update the administrator user after verifying SSL is working."

  handlers:   
    - name: restart_docker
      service:
        name: docker 
        state: restarted
        enabled: true

#Common error resolution - if django is taking a long time to start, try resetting the postgresql password. 
